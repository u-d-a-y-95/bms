version: '3'

services:
  bms-auth:
    container_name: bms-auth
    build: 
      context: ./bms-auth
      dockerfile: dockerfile.dev
    volumes:
      - ./bms-auth:/app
      - /app/node_modules
    ports:
      - 5001:5001
    env_file:
      - ./bms-auth/.env
    depends_on:
      - bms-db
      - bms-mq
    command: ["npm","run","dev"]

  bms-org:
    container_name: bms-org
    build: 
      context: ./bms-org
      dockerfile: dockerfile.dev
    volumes:
      - ./bms-org:/app
      - /app/node_modules
    ports:
      - 5002:5002
    env_file:
      - ./bms-org/.env
    depends_on:
      - bms-db
      - bms-mq
    command: ["npm","run","dev"]

  bms-product:
    container_name: bms-product
    build: 
      context: ./bms-product
      dockerfile: dockerfile.dev
    volumes:
      - ./bms-product:/app
      - /app/node_modules
    ports:
      - 5003:5003
    env_file:
      - ./bms-product/.env
    depends_on:
      - bms-db
      - bms-mq
    command: ["npm","run","dev"]
    
  bms-mq:
    container_name: bms-mq
    image: rabbitmq:3.12-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 5s
      retries: 3

  bms-client:
    container_name: bms-client
    build: 
      context: ./bms-client
      dockerfile: dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - ./bms-client:/app
      - /app/node_modules
    command: ["npm","run","dev"]


  bms-db:
    container_name: bms-db
    image: postgres:16-alpine
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin

  nginx:
    container_name: bms-nginx
    build: 
      context: ./bms-gateway
      dockerfile: dockerfile.dev
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx/conf
    ports:
      - 80:80
